prometheus:
    configs:
      - host_filter: true
        name: agent
        remote_write:
          - basic_auth:
                password: $${REMOTE_WRITE_PASSWORD}
                username: ${REMOTE_WRITE_USERNAME}
            url: ${REMOTE_WRITE_URL}
        scrape_configs:
          - job_name: kubernetes-pods
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - action: drop
                regex: "false"
                source_labels:
                  - __meta_kubernetes_pod_annotation_prometheus_io_scrape
              - action: keep
                regex: .*-metrics
                source_labels:
                  - __meta_kubernetes_pod_container_port_name
              - action: replace
                regex: (https?)
                replacement: $1
                source_labels:
                  - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                target_label: __scheme__
              - action: replace
                regex: (.+)
                replacement: $1
                source_labels:
                  - __meta_kubernetes_pod_annotation_prometheus_io_path
                target_label: __metrics_path__
              - action: replace
                regex: (.+?)(\:\d+)?;(\d+)
                replacement: $1:$3
                source_labels:
                  - __address__
                  - __meta_kubernetes_pod_annotation_prometheus_io_port
                target_label: __address__
              - action: drop
                regex: ""
                source_labels:
                  - __meta_kubernetes_pod_label_name
              - action: replace
                replacement: $1
                separator: /
                source_labels:
                  - __meta_kubernetes_namespace
                  - __meta_kubernetes_pod_label_name
                target_label: job
              - action: replace
                source_labels:
                  - __meta_kubernetes_namespace
                target_label: namespace
              - action: replace
                source_labels:
                  - __meta_kubernetes_pod_name
                target_label: pod
              - action: replace
                source_labels:
                  - __meta_kubernetes_pod_container_name
                target_label: container
              - action: replace
                separator: ':'
                source_labels:
                  - __meta_kubernetes_pod_name
                  - __meta_kubernetes_pod_container_name
                  - __meta_kubernetes_pod_container_port_name
                target_label: instance
              - action: labelmap
                regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: drop
                regex: Succeeded|Failed
                source_labels:
                  - __meta_kubernetes_pod_phase
          - job_name: ${NAMESPACE_KUBE_STATE_METRICS}/kube-state-metrics
            kubernetes_sd_configs:
              - namespaces:
                    names:
                      - ${NAMESPACE_KUBE_STATE_METRICS}
                role: pod
            relabel_configs:
              - action: keep
                regex: kube-state-metrics
                source_labels:
                  - __meta_kubernetes_pod_label_name
              - action: replace
                separator: ':'
                source_labels:
                  - __meta_kubernetes_pod_name
                  - __meta_kubernetes_pod_container_name
                  - __meta_kubernetes_pod_container_port_name
                target_label: instance
          - job_name: ${NAMESPACE_NODE_EXPORTER}/node-exporter
            kubernetes_sd_configs:
              - namespaces:
                    names:
                      - ${NAMESPACE_NODE_EXPORTER}
                role: pod
            relabel_configs:
              - action: keep
                regex: node-exporter
                source_labels:
                  - __meta_kubernetes_pod_label_name
              - action: replace
                source_labels:
                  - __meta_kubernetes_pod_node_name
                target_label: instance
              - action: replace
                source_labels:
                  - __meta_kubernetes_namespace
                target_label: namespace
          - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            job_name: kube-system/kubelet
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              - replacement: kubernetes.default.svc.cluster.local:443
                target_label: __address__
              - replacement: https
                target_label: __scheme__
              - regex: (.+)
                replacement: /api/v1/nodes/$${1}/proxy/metrics
                source_labels:
                  - __meta_kubernetes_node_name
                target_label: __metrics_path__
            tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
          - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            job_name: kube-system/cadvisor
            kubernetes_sd_configs:
              - role: node
            metric_relabel_configs:
              - action: drop
                regex: container_([a-z_]+);
                source_labels:
                  - __name__
                  - image
              - action: drop
                regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
                source_labels:
                  - __name__
            relabel_configs:
              - replacement: kubernetes.default.svc.cluster.local:443
                target_label: __address__
              - regex: (.+)
                replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
                source_labels:
                  - __meta_kubernetes_node_name
                target_label: __metrics_path__
            scheme: https
            tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
    global:
        scrape_interval: 15s
        external_labels: ${jsonencode(EXTERNAL_LABELS)}
    wal_directory: /var/lib/agent/data
server:
    log_level: info
